{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nconst button = document.querySelector('button[data-start]');\nconst spanDays = document.querySelector('span[data-days]');\nconst spanHours = document.querySelector('span[data-hours]');\nconst spanMinutes = document.querySelector('span[data-minutes]');\nconst spanSeconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = new Date();\n    if (date > selectedDates[0]) {\n      button.disabled = true;\n      iziToast.show({\n        title: 'Hey',\n        message: 'What would you like to add?',\n      });\n    } else {\n      userSelectedDate = selectedDates[0];\n      button.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker[type = text]', options);\n\nfunction start() {\n  setInterval(() => {\n    const startTime = new Date();\n    const diff = userSelectedDate - startTime;\n    const time = convertMs(diff);\n\n    function onTick({ days, hours, minutes, seconds }) {\n      spanDays.textContent = addLeadingZero(days);\n      spanHours.textContent = addLeadingZero(hours);\n      spanMinutes.textContent = addLeadingZero(minutes);\n      spanSeconds.textContent = addLeadingZero(seconds);\n    }\n\n    onTick(time);\n  }, 1000);\n}\n\nbutton.addEventListener('click', start);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["button","spanDays","spanHours","spanMinutes","spanSeconds","userSelectedDate","options","selectedDates","flatpickr","start","startTime","diff","time","convertMs","onTick","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"mIAEA,MAAMA,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/D,IAAIC,EAAmB,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACR,IAAI,KACNA,EAAc,IACvBP,EAAO,SAAW,GAClB,SAAS,KAAK,CACZ,MAAO,MACP,QAAS,6BACjB,CAAO,IAEDK,EAAmBE,EAAc,GACjCP,EAAO,SAAW,GAErB,CACH,EAEAQ,EAAU,gCAAiCF,CAAO,EAElD,SAASG,GAAQ,CACf,YAAY,IAAM,CAChB,MAAMC,EAAY,IAAI,KAChBC,EAAON,EAAmBK,EAC1BE,EAAOC,EAAUF,CAAI,EAE3B,SAASG,EAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACjDjB,EAAS,YAAckB,EAAeJ,CAAI,EAC1Cb,EAAU,YAAciB,EAAeH,CAAK,EAC5Cb,EAAY,YAAcgB,EAAeF,CAAO,EAChDb,EAAY,YAAce,EAAeD,CAAO,CACjD,CAEDJ,EAAOF,CAAI,CACZ,EAAE,GAAI,CACT,CAEAZ,EAAO,iBAAiB,QAASS,CAAK,EAEtC,SAASI,EAAUO,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,QAAQ,IAAIR,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}